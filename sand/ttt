if (szMethod) std::cerr << "szMethod            :" << szMethod << std::endl;
if (szUri) std::cerr << "szUri               :" << szUri << std::endl;
if (szVer) std::cerr << "szVer               :" << szVer << std::endl;
if (szQuery) std::cerr << "szQuery             :" << szQuery << std::endl;
if (szAuthType) std::cerr << "szAuthType          :" << szAuthType << std::endl;
if (szRemoteUser) std::cerr << "szRemoteUser        :" << szRemoteUser << std::endl;
if (szAccept) std::cerr << "szAccept            :" << szAccept << std::endl;
if (szAcceptCharset) std::cerr << "szAcceptCharset     :" << szAcceptCharset << std::endl;
if (szAcceptEncoding) std::cerr << "szAcceptEncoding    :" << szAcceptEncoding << std::endl;
if (szAcceptLanguage) std::cerr << "szAcceptLanguage    :" << szAcceptLanguage << std::endl;
if (szAcceptRanges) std::cerr << "szAcceptRanges      :" << szAcceptRanges << std::endl;
if (szAge) std::cerr << "szAge               :" << szAge << std::endl;
if (szAllow) std::cerr << "szAllow             :" << szAllow << std::endl;
if (szAuth) std::cerr << "szAuth              :" << szAuth << std::endl;
if (szCacheControl) std::cerr << "szCacheControl      :" << szCacheControl << std::endl;
if (szConnection) std::cerr << "szConnection        :" << szConnection << std::endl;
if (szContentBase) std::cerr << "szContentBase       :" << szContentBase << std::endl;
if (szContentEncoding) std::cerr << "szContentEncoding   :" << szContentEncoding << std::endl;
if (szContentLanguage) std::cerr << "szContentLanguage   :" << szContentLanguage << std::endl;
if (szContentLength) std::cerr << "szContentLength     :" << szContentLength << std::endl;
if (szContentLocation) std::cerr << "szContentLocation   :" << szContentLocation << std::endl;
if (szContentMD5) std::cerr << "szContentMD5        :" << szContentMD5 << std::endl;
if (szContentRange) std::cerr << "szContentRange      :" << szContentRange << std::endl;
if (szContentType) std::cerr << "szContentType       :" << szContentType << std::endl;
if (szDate) std::cerr << "szDate              :" << szDate << std::endl;
if (szETag) std::cerr << "szETag              :" << szETag << std::endl;
if (szExpires) std::cerr << "szExpires           :" << szExpires << std::endl;
if (szFrom) std::cerr << "szFrom              :" << szFrom << std::endl;
if (szHost) std::cerr << "szHost              :" << szHost << std::endl;
if (szIfModSince) std::cerr << "szIfModSince        :" << szIfModSince << std::endl;
if (szIfMatch) std::cerr << "szIfMatch           :" << szIfMatch << std::endl;
if (szIfNoneMatch) std::cerr << "szIfNoneMatch       :" << szIfNoneMatch << std::endl;
if (szIfRange) std::cerr << "szIfRange           :" << szIfRange << std::endl;
if (szIfUnmodSince) std::cerr << "szIfUnmodSince      :" << szIfUnmodSince << std::endl;
if (szLastMod) std::cerr << "szLastMod           :" << szLastMod << std::endl;
if (szLocation) std::cerr << "szLocation          :" << szLocation << std::endl;
if (szMaxForwards) std::cerr << "szMaxForwards       :" << szMaxForwards << std::endl;
if (szPragma) std::cerr << "szPragma            :" << szPragma << std::endl;
if (szPublic) std::cerr << "szPublic            :" << szPublic << std::endl;
if (szRange) std::cerr << "szRange             :" << szRange << std::endl;
if (szReferer) std::cerr << "szReferer           :" << szReferer << std::endl;
if (szRetryAfter) std::cerr << "szRetryAfter        :" << szRetryAfter << std::endl;
if (szServer) std::cerr << "szServer            :" << szServer << std::endl;
if (szTransferEncoding) std::cerr << "szTransferEncoding  :" << szTransferEncoding << std::endl;
if (szUpgrade) std::cerr << "szUpgrade           :" << szUpgrade << std::endl;
if (szUserAgent) std::cerr << "szUserAgent         :" << szUserAgent << std::endl;
if (szVary) std::cerr << "szVary              :" << szVary << std::endl;
if (szVia) std::cerr << "szVia               :" << szVia << std::endl;
if (szWarning) std::cerr << "szWarning           :" << szWarning << std::endl;
if (szWWWAuth) std::cerr << "szWWWAuth           :" << szWWWAuth << std::endl;
if (szRealm) std::cerr << "szRealm             :" << szRealm << std::endl;
if (ttIfModSince) std::cerr << "ttIfModSince        :" << ttIfModSince << std::endl;
if (ttIfUnmodSince) std::cerr << "ttIfUnmodSince      :" << ttIfUnmodSince << std::endl;
if (bPersistent) std::cerr << "bPersistent         :" << bPersistent << std::endl;
if (bChunked) std::cerr << "bChunked            :" << bChunked << std::endl;
if (ulContentLength) std::cerr << "ulContentLength     :" << ulContentLength << std::endl;
if (szIfMatchEtags) std::cerr << "szIfMatchEtags      :" << szIfMatchEtags << std::endl;
if (szIfNoneMatchEtags) std::cerr << "szIfNoneMatchEtags  :" << szIfNoneMatchEtags << std::endl;
if (rRanges) std::cerr << "rRanges             :" << rRanges << std::endl;
if (iRangeNum) std::cerr << "iRangeNum           :" << iRangeNum << std::endl;
if (iRangeNum) std::cerr << "iRangeNum           :" << iRangeNum << std::endl;
